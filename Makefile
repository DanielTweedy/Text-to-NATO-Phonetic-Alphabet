# Simple makefile for compiling the program

# Compiler of choice
CC=gcc
# Flags used when compiling source code
CFLAGS=-Wall
# Flags used for compiling object code
OFLAGS=-c
# Flags for testing code coverage
COVER=-Wall -ftest-coverage -fprofile-arcs
# Flags for debugging
DEBUG=-Wall -g -D DEBUG
# Input Files
FILES=StringToNPAlpha.o
# Executable name that is being compiled
EXE=StringToNPAlpha
# Files that are generated by the makefile to be cleaned up
CLEANFILES=$(EXE) a.out *.o *.gcov *.gcno *.gcda

StringToNPAlpha : $(FILES)
	$(CC) $(FILES) -o $(EXE)
%.o : %.c 
	$(CC) $(CFLAGS) $(OFLAGS) $<
.PHONY : coverage
coverage :
	$(CC) $(COVER) $(FILES:.o=.c) -o $(EXE)
.PHONY : debug
debug :
	$(CC) $(DEBUG) $(FILES:.o=.c) -o $(EXE)
.PHONY : clean
clean :
	rm -f $(CLEANFILES)
